#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
Get more information at: https://github.com/SLCoding/server-sleep

@author: wiesendaniel (Daniel Wiesendorf)
@author: Japortie (Marcus Schï¿½tte)
@version: v0.3
"""

import os, sys
import getopt

import logging
from serversleep.serverSleep import serverSleep


class Usage(Exception):
    def __init__(self, msg):
        self.msg = msg


def main(argv=None):
    """
    usage: server-sleep [-h] [--help]
                        [-u] [--usage]
                        [-s] [--start]
                        [-c] [--configure]
                        [-l] [--log]
    """
    logger = logging.getLogger(__name__)
    if not os.geteuid() == 0:
        sys.exit("Only root can run this script")

    if argv is None:
        argv = sys.argv
    try:
        try:
            opts, args = getopt.getopt(argv[1:], "huscl", ["help", "usage", "start", "configure", "log"])
        except getopt.error as msg:
            raise Usage(msg)

        # option processing; breaks are written because only the first option is important
        for option, value in opts:
            if option in ("-h", "--help"):
                print(__doc__)
                break

            elif option in ("-u", "--usage"):
                print(self.__doc__)
                break

            elif option in ("-s", "--start"):
                instance = serverSleep()
                logger.info("server-sleep started")
                instance.startup()
                logger.info("server-sleep terminated")
                break

            elif option in ("-c", "--configure"):
                print("configure")
                break
            elif option in ("-l", "--log"):
                print("show logfile...")
                break

        return 0

    except Usage as err:
        print(str(err.msg))
        print("for help use --help or --usage")
        return 2


if __name__ == "__main__":
    sys.exit(main())
