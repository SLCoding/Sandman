#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
sandman (https://github.com/SLCoding/Sandman)
"""

import sys
import logging
import argparse
from sandman.Sandman import Sandman


def get_parser():
    parser = argparse.ArgumentParser(
        description='Sandman puts your server to sleep when it\'s not in use.')

    parser.add_argument(
        '-d', '--daemon',
        action='store_true',
        help='start as daemon')

    parser.add_argument(
        '-c', '--config',
        default='/etc/sandman/sandman.cfg',
        help='path to config file')

    parser.add_argument(
        '-l', '--logfile',
        default=None,
        help='path to log file (logs to STDOUT if not set)')

    parser.add_argument(
        '-v', '--verbose',
        action='count',
        help='log level (-vvv for maximal verbosity)')

    # TODO replace version while releasing
    parser.add_argument(
        '--version',
        action='version',
        version='%(prog)s X.X.X')

    return parser


def get_logger(filename=None, lvl=None):

    if lvl is None:
        lvl = logging.DEBUG

    if lvl == 1:
        lvl = logging.WARNING

    if lvl == 2:
        lvl = logging.INFO

    if lvl == 3:
        lvl = logging.DEBUG

    print(lvl)

    logging.basicConfig(
        filename=filename,
        level=lvl,
        format='%(asctime)s %(levelname)-8s %(message)s',
        datefmt='%a, %d %b %Y %H:%M:%S')

    logger = logging.getLogger(__name__)

    return logger


def run():
    config = get_parser().parse_args()

    print(config)

    # TODO implement daemon mode

    logger = get_logger(filename=config.logfile, lvl=config.verbose)
    logger.info("Starting...")

    # TODO consider passing config object from here to get general config like log level here also
    instance = Sandman(config_file=config.config)
    instance.run()

    logger.info("Bye, bye")

    return 0


if __name__ == "__main__":
    sys.exit(run())
